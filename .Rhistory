saudi <- rbind(male, female)
# Build the visualization
ggplot(saudi, aes(x = AGE, y = POP, fill = SEX, width = 1)) +
coord_flip() +
annotate('text', x = 70, y = 6500000,
label = 'Data source: US Census Bureau \nIDB via the idbr R package',
size = 3.5, hjust = 0) +
geom_bar(data = subset(saudi, SEX == "Female"), stat = "identity") +
geom_bar(data = subset(saudi, SEX == "Male"), stat = "identity") +
scale_y_continuous(breaks = seq(-1000000, 1000000, 500000),
labels = paste0(as.character(c(seq(10, 0, -5), c(5, 10))), "m")) +
theme_economist(base_size = 14) +
scale_fill_economist() +
ggtitle('Population structure of Saudi Arabia, 2016') +
ylab('Population') +
xlab('Age') +
theme(legend.position = "bottom",
legend.title = element_blank()) +
guides(fill = guide_legend(reverse = TRUE))
source('~/Documents/SAudi_census.R')
library(countrycode)
ssrs <- countrycode(c('Russia', 'Ukraine', 'Belarus'), 'country.name', 'fips104')
# Fetch data for 'E0', which represents life expectancy at birth
ssr_df <- idb5(ssrs, 1989:2015, variables = 'E0', country_name = TRUE)
ggplot(ssr_df, aes(x = time, y = E0, color = NAME)) +
geom_line(size = 1) +
theme_economist(base_size = 14) +
scale_color_economist() +
ylab('Life expectancy at birth') +
xlab('Year') +
theme(legend.title = element_blank(),
legend.position = "bottom") +
annotate('text', x = 2010, y = 64.5,
label = 'Data source: US Census Bureau IDB \nvia the idbr R package',
size = 3.5)
library(countrycode)
install.packages("countrycode", lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(countrycode)
ssrs <- countrycode(c('Russia', 'Ukraine', 'Belarus'), 'country.name', 'fips104')
# Fetch data for 'E0', which represents life expectancy at birth
ssr_df <- idb5(ssrs, 1989:2015, variables = 'E0', country_name = TRUE)
ggplot(ssr_df, aes(x = time, y = E0, color = NAME)) +
geom_line(size = 1) +
theme_economist(base_size = 14) +
scale_color_economist() +
ylab('Life expectancy at birth') +
xlab('Year') +
theme(legend.title = element_blank(),
legend.position = "bottom") +
annotate('text', x = 2010, y = 64.5,
label = 'Data source: US Census Bureau IDB \nvia the idbr R package',
size = 3.5)
ssrs <- countrycode(c("Saudi Arabia", 'Russia', 'Ukraine', 'Belarus'), 'country.name', 'fips104')
library(countrycode)
ssrs <- countrycode(c("Saudi Arabia", 'Russia', 'Ukraine', 'Belarus'), 'country.name', 'fips104')
# Fetch data for 'E0', which represents life expectancy at birth
ssr_df <- idb5(ssrs, 1989:2015, variables = 'E0', country_name = TRUE)
ggplot(ssr_df, aes(x = time, y = E0, color = NAME)) +
geom_line(size = 1) +
theme_economist(base_size = 14) +
scale_color_economist() +
ylab('Life expectancy at birth') +
xlab('Year') +
theme(legend.title = element_blank(),
legend.position = "bottom") +
annotate('text', x = 2010, y = 64.5,
label = 'Data source: US Census Bureau IDB \nvia the idbr R package',
size = 3.5)
library(idbr)
library(ggplot2)
library(animation)
library(dplyr)
library(ggthemes)
idb_api_key("f08ab5cee326ad6ecedcf9bdf03263f65f188821")
male <- idb1('JA', 2010:2050, sex = 'male') %>%
mutate(POP = POP * -1,
SEX = 'Male')
female <- idb1('JA', 2010:2050, sex = 'female') %>%
mutate(SEX = 'Female')
japan <- rbind(male, female) %>%
mutate(abs_pop = abs(POP))
# Animate it with a for loop
saveGIF({
for (i in 2010:2050) {
title <- as.character(i)
year_data <- filter(japan, time == i)
g1 <- ggplot(year_data, aes(x = AGE, y = POP, fill = SEX, width = 1)) +
coord_fixed() +
coord_flip() +
annotate('text', x = 98, y = -800000,
label = 'Data: US Census Bureau IDB; idbr R package', size = 3) +
geom_bar(data = subset(year_data, SEX == "Female"), stat = "identity") +
geom_bar(data = subset(year_data, SEX == "Male"), stat = "identity") +
scale_y_continuous(breaks = seq(-1000000, 1000000, 500000),
labels = paste0(as.character(c(seq(1, 0, -0.5), c(0.5, 1))), "m"),
limits = c(min(japan$POP), max(japan$POP))) +
theme_economist(base_size = 14) +
scale_fill_manual(values = c('#ff9896', '#d62728')) +
ggtitle(paste0('Population structure of Japan, ', title)) +
ylab('Population') +
xlab('Age') +
theme(legend.position = "bottom", legend.title = element_blank()) +
guides(fill = guide_legend(reverse = TRUE))
print(g1)
}
library(idbr)
library(ggplot2)
library(animation)
library(dplyr)
library(ggthemes)
idb_api_key("f08ab5cee326ad6ecedcf9bdf03263f65f188821")
male <- idb1('JA', 2010:2050, sex = 'male') %>%
mutate(POP = POP * -1,
SEX = 'Male')
female <- idb1('JA', 2010:2050, sex = 'female') %>%
mutate(SEX = 'Female')
japan <- rbind(male, female) %>%
mutate(abs_pop = abs(POP))
# Animate it with a for loop
saveGIF({
for (i in 2010:2050) {
title <- as.character(i)
year_data <- filter(japan, time == i)
g1 <- ggplot(year_data, aes(x = AGE, y = POP, fill = SEX, width = 1)) +
coord_fixed() +
coord_flip() +
annotate('text', x = 98, y = -800000,
label = 'Data: US Census Bureau IDB; idbr R package', size = 3) +
geom_bar(data = subset(year_data, SEX == "Female"), stat = "identity") +
geom_bar(data = subset(year_data, SEX == "Male"), stat = "identity") +
scale_y_continuous(breaks = seq(-1000000, 1000000, 500000),
labels = paste0(as.character(c(seq(1, 0, -0.5), c(0.5, 1))), "m"),
limits = c(min(japan$POP), max(japan$POP))) +
theme_economist(base_size = 14) +
scale_fill_manual(values = c('#ff9896', '#d62728')) +
ggtitle(paste0('Population structure of Japan, ', title)) +
ylab('Population') +
xlab('Age') +
theme(legend.position = "bottom", legend.title = element_blank()) +
guides(fill = guide_legend(reverse = TRUE))
print(g1)
}
}, movie.name = 'japan_pyramid.gif', interval = 0.1, ani.width = 700, ani.height = 600)
?
s
library(idbr)
library(ggplot2)
library(animation)
library(dplyr)
library(ggthemes)
idb_api_key("f08ab5cee326ad6ecedcf9bdf03263f65f188821")
male <- idb1('JA', 2010:2050, sex = 'male') %>%
mutate(POP = POP * -1,
SEX = 'Male')
female <- idb1('JA', 2010:2050, sex = 'female') %>%
mutate(SEX = 'Female')
japan <- rbind(male, female) %>%
mutate(abs_pop = abs(POP))
# Animate it with a for loop
saveGIF({
for (i in 2010:2050) {
title <- as.character(i)
year_data <- filter(japan, time == i)
g1 <- ggplot(year_data, aes(x = AGE, y = POP, fill = SEX, width = 1)) +
coord_fixed() +
coord_flip() +
annotate('text', x = 98, y = -800000,
label = 'Data: US Census Bureau IDB; idbr R package', size = 3) +
geom_bar(data = subset(year_data, SEX == "Female"), stat = "identity") +
geom_bar(data = subset(year_data, SEX == "Male"), stat = "identity") +
scale_y_continuous(breaks = seq(-1000000, 1000000, 500000),
labels = paste0(as.character(c(seq(1, 0, -0.5), c(0.5, 1))), "m"),
limits = c(min(japan$POP), max(japan$POP))) +
theme_economist(base_size = 14) +
scale_fill_manual(values = c('#ff9896', '#d62728')) +
ggtitle(paste0('Population structure of Japan, ', title)) +
ylab('Population') +
xlab('Age') +
theme(legend.position = "bottom", legend.title = element_blank()) +
guides(fill = guide_legend(reverse = TRUE))
print(g1)
}
}, movie.name = 'japan_pyramid.gif', interval = 0.1, ani.width = 700, ani.height = 600)
source('~/Documents/census_animation.R')
install.packages("animation", lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(idbr)
library(ggplot2)
library(animation)
library(dplyr)
library(ggthemes)
idb_api_key("f08ab5cee326ad6ecedcf9bdf03263f65f188821")
male <- idb1('JA', 2010:2050, sex = 'male') %>%
mutate(POP = POP * -1,
SEX = 'Male')
female <- idb1('JA', 2010:2050, sex = 'female') %>%
mutate(SEX = 'Female')
japan <- rbind(male, female) %>%
mutate(abs_pop = abs(POP))
# Animate it with a for loop
saveGIF({
for (i in 2010:2050) {
title <- as.character(i)
year_data <- filter(japan, time == i)
g1 <- ggplot(year_data, aes(x = AGE, y = POP, fill = SEX, width = 1)) +
coord_fixed() +
coord_flip() +
annotate('text', x = 98, y = -800000,
label = 'Data: US Census Bureau IDB; idbr R package', size = 3) +
geom_bar(data = subset(year_data, SEX == "Female"), stat = "identity") +
geom_bar(data = subset(year_data, SEX == "Male"), stat = "identity") +
scale_y_continuous(breaks = seq(-1000000, 1000000, 500000),
labels = paste0(as.character(c(seq(1, 0, -0.5), c(0.5, 1))), "m"),
limits = c(min(japan$POP), max(japan$POP))) +
theme_economist(base_size = 14) +
scale_fill_manual(values = c('#ff9896', '#d62728')) +
ggtitle(paste0('Population structure of Japan, ', title)) +
ylab('Population') +
xlab('Age') +
theme(legend.position = "bottom", legend.title = element_blank()) +
guides(fill = guide_legend(reverse = TRUE))
print(g1)
}
}, movie.name = 'japan_pyramid.gif', interval = 0.1, ani.width = 700, ani.height = 600)
1/.2
1/.2^2
25/sqrt(40)
λ <- 0.2
μ = 1/λ   #  the theoretical value of the exponential distribution mean
σ = 1/λ/sqrt(n)
n <- 40           # number of exponetials
σ = 1/λ/sqrt(n)   #  the theoretical standard deviation
var_s <- σ^2
source('~/Data_Science/project_1.R')
source('~/Data_Science/statics_infer_prj2.R')
source('~/Data_Science/statics_infer_prj2.R')
ggplot(x, aes(supp, len))+geom_boxplot(aes( color = dose))
summarise(group_by(x, supp,dose ),
mean=mean(len), sd=sd(len))
tapply(x$len, x$supp, mean)
tapply(x$len, x$dose, mean)
ajuste <- aov(x$len ~ x$supp * x$dose)
summary(ajuste)
anova(ajuste)
table(x$supp, x$dose) #
confint(ajuste)
?confint
TukeyHSD(ajuste)
?TukeyHSD()
summary(fm1 <- aov(breaks ~ wool + tension, data = warpbreaks))
TukeyHSD(fm1, "tension", ordered = TRUE)
plot(TukeyHSD(fm1, "tension"))
TukeyHSD(ajuste, "supp", ordered = TRUE)
plot(TukeyHSD(ajuste, "supp"))
View(x)
TukeyHSD(ajuste, "dose", ordered = TRUE)
plot(TukeyHSD(ajuste, "supp"))
TukeyHSD(ajuste, "dose", ordered = TRUE)
plot(TukeyHSD(ajuste, "dose"))
TukeyHSD(ajuste, "dose", ordered = TRUE)
plot(TukeyHSD(ajuste, "dose"))
warpbreaks
str(warpbreaks)
str(x)
summary(fm1 <- aov(breaks ~ wool + tension, data = warpbreaks))
TukeyHSD(fm1, "tension", ordered = TRUE)
plot(TukeyHSD(fm1, "tension"))
TukeyHSD(fm1, "tension", ordered = TRUE)
TukeyHSD(ajuste, "dose", ordered = TRUE)
TukeyHSD(ajuste, "dose")
TukeyHSD(ajuste, "x$dose")
TukeyHSD(ajuste, "x$supp")
plot(TukeyHSD(ajuste, "x$dose"))
ajuste <- aov(len ~ supp * dose, data = x)
TukeyHSD(ajuste, "dose", ordered = TRUE)
plot(TukeyHSD(ajuste, "dose"))
TukeyHSD(ajuste, "supp", ordered = TRUE)
plot(TukeyHSD(ajuste, "supp"))
print(model.tables(ajuste,"means"),digits=3)
print(model.tables(ajuste,"means"),digits=2)
print(model.tables(ajuste,"means"),digits=3, )
str(ajuste)
print(model.tables(ajuste, type = "means", ),digits=3)
summary(x)
summarise(group_by(x, supp,dose ),
mean=mean(len), sd=sd(len))
TukeyHSD(ajuste, ordered = TRUE)
summary(ajuste)
confint(ajuste)
print(model.tables(ajuste, type = "means" ), digits=3)
source('~/Data_Science/statics_infer_prj2.R')
summary(x)
source('~/Data_Science/statics_infer_prj2.R')
# visulaizing the interactions
source('~/Data_Science/statics_infer_prj2.R')
#  libraries
library(dplyr)
library(tidyr)
library(ggplot2)
# The Effect of Vitamin C on Tooth Growth in Guinea Pigs
data(ToothGrowth)
x <-  tbl_df(ToothGrowth) # easier to work with
# dose seems to be a catagorical variables
x$dose <- as.factor(x$dose) # convert to factor
# Basic summary
str(x)
summary(x)
# visulaizing the interactions
ggplot(x, aes(supp, len))+geom_boxplot(aes( color = dose))
#  total number of possible treatements
table(x$supp, x$dose) #
# Anova
ajuste <- aov(len ~ supp * dose, data = x)
summary(ajuste)
confint(ajuste)
TukeyHSD(ajuste, ordered = TRUE)
print(model.tables(ajuste, type = "means" ), digits=3)
swirl()
library(swirl)
swirl()
dice_sqr
ex2_fair <- dice_sqr * dice_fair
ex2_fair <- sum( dice_sqr * dice_fair)
ex2_fair - 3.5^2
edh
sum(dice_high* dice_sqr) - edh^2
install.packages("ProjectTemplate", lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library('ProjectTemplate')
create.project('letters')
library('ProjectTemplate')
create.project('letters')
library(ggplot2)
p <- qplot(hp, mpg, data= mtcars, shape= factor(am), color= am,
facets= gear~cyl, main="Scatterplots of MPG vs. Horsepower",
xlab="Horsepower", ylab="Miles per Gallon")
# White background and black grid lines
p + theme_bw()
# Large brown bold italics labels
# and legend placed at top of plot
p + theme(axis.title=element_text(face="bold.italic",
size="12", color="brown"), legend.position="top")
install.packages("gridExtra", lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("gridExtra")
data <- tbl_df(read.csv("~/Downloads/household_power_consumption.txt", sep=";", na.strings="?" ,as.is = T))
power_consumption <- filter(data, Date == "1/2/2007" | Date == "2/2/2007")
# convert the Date and Time variables to Date/Time classes
datetime <- dmy_hms(paste(power_consumption$Date, power_consumption$Time, sep = '/'))
mod_data <- power_consumption %>%
mutate(datetime = datetime)
power_consumption$Date <- dmy(power_consumption$Date)
library(dplyr)
library(lubridate)
library (ggplot2)
library("gridExtra")
data <- tbl_df(read.csv("~/Downloads/household_power_consumption.txt", sep=";", na.strings="?" ,as.is = T))
power_consumption <- filter(data, Date == "1/2/2007" | Date == "2/2/2007")
# convert the Date and Time variables to Date/Time classes
datetime <- dmy_hms(paste(power_consumption$Date, power_consumption$Time, sep = '/'))
mod_data <- power_consumption %>%
mutate(datetime = datetime)
power_consumption$Date <- dmy(power_consumption$Date)
hist(power_consumption$Global_active_power,
col = 'red',
xlab = 'Global Active Power(KW) ')
View(power_consumption)
ggplot(power_consumption, aes(x= Global_active_power ))+ geom_histogram()
ggplot(power_consumption, aes(x= Global_active_power ))+ geom_histogram(bins = 10)
ggplot(power_consumption, aes(x= Global_active_power ))+ geom_histogram(bins = 12)
ggplot(power_consumption, aes(x= Global_active_power ))+ geom_histogram(bins = 12, fill= 'red')
ggplot(power_consumption, aes(x= Global_active_power ))+ geom_histogram(bins = 12, fill= 'red')
p1 <- ggplot(power_consumption, aes(x= Global_active_power ))+ geom_histogram(bins = 12, fill= 'red')
###  PLot2
p2 <- ggplot(aes(x = datetime, y = Global_active_power), data = mod_data) +
geom_line() +
ylab('Global avtive Power (KW')
#  plot 3
grid.arrange(p1, p2,
ncol=2, nrow=1, widths=c(4, 1.4), heights=c(1.4, 4))
grid.arrange(p1, p2,
ncol=2, nrow=2, widths=c(4, 1.4), heights=c(1.4, 4))
grid.arrange(p1, p2,
ncol=2, nrow=2)
ggplot(aes(x = datetime, y = Global_active_power, Sub_metering_2 ,Sub_metering_2, Sub_metering_3), data = mod_data) +
geom_line() +
ylab('Global avtive Power (KW')
ggplot(mod_data, aes(x = datetime, col= power_consumption )) +       # basic graphical object
geom_line(aes(y = Sub_metering_1 ),        # first layer
colour="red") +
geom_line(aes(y= Sub_metering_2),          # second layer
colour="green")+
geom_line(aes(y= Sub_metering_3),           # second layer
colour="blue")
ggplot(mod_data, aes(x = datetime, col= c('a', 'b' )) +       # basic graphical object
geom_line(aes(y = Sub_metering_1 ),        # first layer
colour="red") +
geom_line(aes(y= Sub_metering_2),          # second layer
colour="green")+
geom_line(aes(y= Sub_metering_3),           # second layer
colour="blue")
str(mod_data)
str(mod_data)
mod_data
mod_data
tail(mod_data)
library(lattice)
library(ggplot2)
# number of observations to simulate
nobs = 60000
sites = 6
# Using a correlation matrix (let's assume that all variables
# have unit variance
M = matrix(c(1, 0.7,
0.7, 1), nrow=2, ncol=2)
# Cholesky decomposition
L = chol(M)
nvars = dim(L)[1]
# Random variables that follow an M correlation matrix
r = t(L) %*% matrix(rnorm(nvars*nobs), nrow=nvars, ncol=nobs)
r = t(r)
rdata = as.data.frame(r)
names(rdata) = c('x', 'y')
rdata$site = factor(rep(1:sites, each = nobs/sites))
# Plotting with lattice
xyplot(y ~ x | site, data = rdata,
layout = c(3, 2), type=c('p','smooth'))
xyplot(y ~ x | site, data = rdata,
layout = c(3, 2), type=c('p','smooth'))
# Plotting with ggplot2
qplot(x, y, facets = ~ site,
geom=c('point', 'smooth'),
data = rdata) + facet_wrap(~site)
View(M)
View(L)
View(male)
View(mod_data)
View(power_consumption)
library(tidyr)
mod_data %>%
View(mod_data)
gather(mod_data, key= reader,value = value,Sub_metering_1:Sub_metering_3 )
View(mod_data)
mata_11 <- gather(mod_data, key= reader,value = value,Sub_metering_1:Sub_metering_3 )
mata_11
view(mata_11)
View(mata_11)
ggplot(mata_11, aes(x= datatime, y= value, col= reader)), geom_point()
ggplot(mata_11, aes(x= datatime, y= value, col= reader)) + geom_point()
ggplot(mata_11, aes(x= datetime, y= value, col= reader)) + geom_point()
ggplot(mata_11, aes(x= datatime, y= value, col= reader)) + geom_line()
ggplot(mata_11, aes(x= datatime, y= value, col= reader)) + geom_line()
ggplot(mata_11, aes(x= datetime, y= value, col= reader)) + geom_line()
data_long <- gather(mod_data, key= Meter,value = Reading,Sub_metering_1:Sub_metering_3 )
ggplot(data_long, aes(x= datetime, y= Reading, col= Meter)) + geom_line()
p2.1 <- ggplot(aes(x = datetime, y = Global_reactive_power), data = mod_data) +
geom_line() +
ylab('Global Reactive Power (KW')
p2.2 <- ggplot(aes(x = datetime, y = Voltage), data = mod_data) +
geom_line() +
ylab('Voltage')
p2.2
grid.arrange(p2, p2.1,p3,p2.2 ,
ncol=2, nrow=2)
p3 <- ggplot(data_long, aes(x= datetime, y= Reading, col= Meter)) + geom_line()
grid.arrange(p2, p2.1,p3,p2.2 ,
ncol=2, nrow=2)
p4 <- grid.arrange(p2, p2.1,p3,p2.2 ,
ncol=2, nrow=2)
p4
p1 <-hist(power_consumption$Global_active_power,
col = 'red',
xlab = 'Global Active Power(KW) ')
ggplot(power_consumption, aes(x= Global_active_power ))+ geom_histogram(bins = 12, fill= 'red')
p1 <-hist(power_consumption$Global_active_power,
col = 'red',
xlab = 'Global Active Power(KW) ')
p1
png( filename ='~/Data_Science/GitHub/ExData_Plotting1/figure/plot1.png',
width = 480, height = 480 )
p1 <-hist(power_consumption$Global_active_power,
col = 'red',
xlab = 'Global Active Power(KW) ')
dev.off()
png( filename ='~/Data_Science/GitHub/ExData_Plotting1/figure/plot2.png', width = 480, height = 480 )
p2 <- ggplot(aes(x = datetime, y = Global_active_power), data = mod_data) +
geom_line() +
ylab('Global avtive Power (KW')
dev.off(
)
p2
png( filename ='~/Data_Science/GitHub/ExData_Plotting1/figure/plot2.png', width = 480, height = 480 )
p2 <- ggplot(aes(x = datetime, y = Global_active_power), data = mod_data) +
geom_line() +
ylab('Global avtive Power (KW')
p2
dev.off()
data_long <- gather(mod_data, key= Meter,value = Reading,Sub_metering_1:Sub_metering_3 )
png( filename ='~/Data_Science/GitHub/ExData_Plotting1/figure/plot3.png', width = 480, height = 480 )
p3 <- ggplot(data_long, aes(x= datetime, y= Reading, col= Meter)) + geom_line()
p3
dev.off()
png( filename ='~/Data_Science/GitHub/ExData_Plotting1/figure/plot4.png' )
grid.arrange(p2, p2.1,p3,p2.2 ,
ncol=2, nrow=2)
dev.off()
save(mod_data)
save(file = 'mod_data.rData')
save(mod_data, file = 'mod_data.rData')
load("~/Data_Science/GitHub/ExData_Plotting1/figure/.RData")
View(rdata)
save(mod_data, file = '~/Data_Science/GitHub/ExData_Plotting1/figure/mod_data.rData')
load(mod_data)
load(file = 'mod_data.rData')
setwd("~/Data_Science/GitHub/ExData_Plotting1")
